body {
	width: 100%;
	height: 100%;
	display: block;
	margin: 0;
}

.half_page {
	height: 50%;
	width: 100%;
}

/* only use this method to set an image's source will be CHANGING */
.kitten {content: url("images/kitten-large.png");}


.bread {content: url ("images/kittyloaf.png");}


@media only screen and (max-width: 650px) {
body { background-color: #E7EB86;
}

@media only screen and (max-width: 475px) {
body { background-color: black;}
}

@media only screen and (max-width: 650px) {
.kitten {content: url("images/kitten-medium.png");
		padding-top: 500px;
}

@media only screen and (max-width: 470px) {
.kitten {content: url("images/kitten-small.png");
		padding-top: 0px;}
}

@media only screen and (max-width: 260px) {
.bread {content: url("images/kittyloaf.gif");}
.kitten {content:url("images/kittyloaf.gif") }
}

@media only screen and (max-width: 230px) {
.kitten {background-color: pink;}
}

@media only screen and (max-width: 150px) {
.bread {background-color: pink;}
.kitten {background-color: black;}
}

@media only screen and (max-width: 150px) {
body {background-color: pink;}
.kitten {background-color: pink;}
}














/* Use this class on the PARENT of the <img> you are trying to center */
/* REMEMBER: the PARENT element tells the CHILD element(s) what to do! */
/* NOTE: Centering images in DIVs only works when the display property is "flex"! */
.center-img {
	display: flex;
	align-items: center;
	justify-content: center;
}

/* Use this class on any <img> you want to prevent from overflowing it's parent <div>! */
.contain-img {
	max-height: 99%;
	max-width: 99%;
}